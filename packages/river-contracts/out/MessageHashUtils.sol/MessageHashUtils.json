{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e48e8b3dbff524e096fa3351492f57887b5d038353cfdd156d614e8c602e67764736f6c63430008170033","sourceMap":"521:3235:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:31;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e48e8b3dbff524e096fa3351492f57887b5d038353cfdd156d614e8c602e67764736f6c63430008170033","sourceMap":"521:3235:31:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":micro-onchain-metadata-utils/=lib/river-contracts/lib/micro-onchain-metadata-utils/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":river-contracts/=lib/river-contracts/src/\",\":solidity-bytes-utils/=lib/river-contracts/lib/solidity-bytes-utils/contracts/\",\":sstore2/=lib/river-contracts/lib/sstore2/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8\",\"dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xb0984d5ca4898c8597f1ac8d3e1214c556d82dc374f3ff6a9fb23a19f2c77001\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://714da2810e8cb87f6f62f0bd154efd5df2c133b620364249d432b87b9cb2048a\",\"dweb:/ipfs/QmVnQqUFebn98mxQMto6xH4TPnZX53jzuqRV351fMn3sVs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512\",\"dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","micro-onchain-metadata-utils/=lib/river-contracts/lib/micro-onchain-metadata-utils/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","river-contracts/=lib/river-contracts/src/","solidity-bytes-utils/=lib/river-contracts/lib/solidity-bytes-utils/contracts/","sstore2/=lib/river-contracts/lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":500000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38","urls":["bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8","dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xb0984d5ca4898c8597f1ac8d3e1214c556d82dc374f3ff6a9fb23a19f2c77001","urls":["bzz-raw://714da2810e8cb87f6f62f0bd154efd5df2c133b620364249d432b87b9cb2048a","dweb:/ipfs/QmVnQqUFebn98mxQMto6xH4TPnZX53jzuqRV351fMn3sVs"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f","urls":["bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512","dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":45133,"exportedSymbols":{"MessageHashUtils":[45132],"Strings":[44483]},"nodeType":"SourceUnit","src":"123:3634:31","nodes":[{"id":45060,"nodeType":"PragmaDirective","src":"123:24:31","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":45062,"nodeType":"ImportDirective","src":"149:39:31","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":45133,"sourceUnit":44484,"symbolAliases":[{"foreign":{"id":45061,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44483,"src":"157:7:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":45132,"nodeType":"ContractDefinition","src":"521:3235:31","nodes":[{"id":45073,"nodeType":"FunctionDefinition","src":"1222:460:31","nodes":[],"body":{"id":45072,"nodeType":"Block","src":"1314:368:31","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:31","nodeType":"YulBlock","src":"1376:300:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:31","nodeType":"YulLiteral","src":"1397:4:31","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:31","nodeType":"YulLiteral","src":"1403:34:31","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:31","nodeType":"YulIdentifier","src":"1390:6:31"},"nativeSrc":"1390:48:31","nodeType":"YulFunctionCall","src":"1390:48:31"},"nativeSrc":"1390:48:31","nodeType":"YulExpressionStatement","src":"1390:48:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:31","nodeType":"YulLiteral","src":"1499:4:31","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:31","nodeType":"YulIdentifier","src":"1505:11:31"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:31","nodeType":"YulIdentifier","src":"1492:6:31"},"nativeSrc":"1492:25:31","nodeType":"YulFunctionCall","src":"1492:25:31"},"nativeSrc":"1492:25:31","nodeType":"YulExpressionStatement","src":"1492:25:31"},{"nativeSrc":"1571:31:31","nodeType":"YulAssignment","src":"1571:31:31","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:31","nodeType":"YulLiteral","src":"1591:4:31","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:31","nodeType":"YulLiteral","src":"1597:4:31","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:31","nodeType":"YulIdentifier","src":"1581:9:31"},"nativeSrc":"1581:21:31","nodeType":"YulFunctionCall","src":"1581:21:31"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:31","nodeType":"YulIdentifier","src":"1571:6:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":45069,"isOffset":false,"isSlot":false,"src":"1571:6:31","valueSize":1},{"declaration":45066,"isOffset":false,"isSlot":false,"src":"1505:11:31","valueSize":1}],"id":45071,"nodeType":"InlineAssembly","src":"1367:309:31"}]},"documentation":{"id":45064,"nodeType":"StructuredDocumentation","src":"552:665:31","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:31","parameters":{"id":45067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45066,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:31","nodeType":"VariableDeclaration","scope":45073,"src":"1254:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:31"},"returnParameters":{"id":45070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45069,"mutability":"mutable","name":"digest","nameLocation":"1306:6:31","nodeType":"VariableDeclaration","scope":45073,"src":"1298:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:31"},"scope":45132,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":45099,"nodeType":"FunctionDefinition","src":"2148:229:31","nodes":[],"body":{"id":45098,"nodeType":"Block","src":"2234:143:31","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":45085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":45090,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45076,"src":"2343:7:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":45091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:31","memberName":"length","nodeType":"MemberAccess","src":"2343:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":45088,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44483,"src":"2326:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$44483_$","typeString":"type(library Strings)"}},"id":45089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:31","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":44296,"src":"2326:16:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":45092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":45087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":45086,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:31","typeDescriptions":{}}},"id":45093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":45094,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45076,"src":"2361:7:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":45083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":45082,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:31","typeDescriptions":{}}},"id":45084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:31","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:31","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":45095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":45081,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":45096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":45080,"id":45097,"nodeType":"Return","src":"2244:126:31"}]},"documentation":{"id":45074,"nodeType":"StructuredDocumentation","src":"1688:455:31","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:31","parameters":{"id":45077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45076,"mutability":"mutable","name":"message","nameLocation":"2193:7:31","nodeType":"VariableDeclaration","scope":45099,"src":"2180:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":45075,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:31"},"returnParameters":{"id":45080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":45099,"src":"2225:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:31"},"scope":45132,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":45119,"nodeType":"FunctionDefinition","src":"2720:191:31","nodes":[],"body":{"id":45118,"nodeType":"Block","src":"2831:80:31","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":45112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":45113,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45102,"src":"2887:9:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45114,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45104,"src":"2898:4:31","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":45110,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:31","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":45111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:31","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:31","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":45115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":45109,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":45116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":45108,"id":45117,"nodeType":"Return","src":"2841:63:31"}]},"documentation":{"id":45100,"nodeType":"StructuredDocumentation","src":"2383:332:31","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:31","parameters":{"id":45105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45102,"mutability":"mutable","name":"validator","nameLocation":"2769:9:31","nodeType":"VariableDeclaration","scope":45119,"src":"2761:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45101,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45104,"mutability":"mutable","name":"data","nameLocation":"2793:4:31","nodeType":"VariableDeclaration","scope":45119,"src":"2780:17:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":45103,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:31","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:31"},"returnParameters":{"id":45108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":45119,"src":"2822:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:31"},"scope":45132,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":45131,"nodeType":"FunctionDefinition","src":"3353:401:31","nodes":[],"body":{"id":45130,"nodeType":"Block","src":"3462:292:31","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:31","nodeType":"YulBlock","src":"3524:224:31","statements":[{"nativeSrc":"3538:22:31","nodeType":"YulVariableDeclaration","src":"3538:22:31","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:31","nodeType":"YulLiteral","src":"3555:4:31","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:31","nodeType":"YulIdentifier","src":"3549:5:31"},"nativeSrc":"3549:11:31","nodeType":"YulFunctionCall","src":"3549:11:31"},"variables":[{"name":"ptr","nativeSrc":"3542:3:31","nodeType":"YulTypedName","src":"3542:3:31","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:31","nodeType":"YulIdentifier","src":"3580:3:31"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:31","nodeType":"YulLiteral","src":"3585:10:31","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:31","nodeType":"YulIdentifier","src":"3573:6:31"},"nativeSrc":"3573:23:31","nodeType":"YulFunctionCall","src":"3573:23:31"},"nativeSrc":"3573:23:31","nodeType":"YulExpressionStatement","src":"3573:23:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:31","nodeType":"YulIdentifier","src":"3620:3:31"},{"kind":"number","nativeSrc":"3625:4:31","nodeType":"YulLiteral","src":"3625:4:31","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:31","nodeType":"YulIdentifier","src":"3616:3:31"},"nativeSrc":"3616:14:31","nodeType":"YulFunctionCall","src":"3616:14:31"},{"name":"domainSeparator","nativeSrc":"3632:15:31","nodeType":"YulIdentifier","src":"3632:15:31"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:31","nodeType":"YulIdentifier","src":"3609:6:31"},"nativeSrc":"3609:39:31","nodeType":"YulFunctionCall","src":"3609:39:31"},"nativeSrc":"3609:39:31","nodeType":"YulExpressionStatement","src":"3609:39:31"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:31","nodeType":"YulIdentifier","src":"3672:3:31"},{"kind":"number","nativeSrc":"3677:4:31","nodeType":"YulLiteral","src":"3677:4:31","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:31","nodeType":"YulIdentifier","src":"3668:3:31"},"nativeSrc":"3668:14:31","nodeType":"YulFunctionCall","src":"3668:14:31"},{"name":"structHash","nativeSrc":"3684:10:31","nodeType":"YulIdentifier","src":"3684:10:31"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:31","nodeType":"YulIdentifier","src":"3661:6:31"},"nativeSrc":"3661:34:31","nodeType":"YulFunctionCall","src":"3661:34:31"},"nativeSrc":"3661:34:31","nodeType":"YulExpressionStatement","src":"3661:34:31"},{"nativeSrc":"3708:30:31","nodeType":"YulAssignment","src":"3708:30:31","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:31","nodeType":"YulIdentifier","src":"3728:3:31"},{"kind":"number","nativeSrc":"3733:4:31","nodeType":"YulLiteral","src":"3733:4:31","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:31","nodeType":"YulIdentifier","src":"3718:9:31"},"nativeSrc":"3718:20:31","nodeType":"YulFunctionCall","src":"3718:20:31"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:31","nodeType":"YulIdentifier","src":"3708:6:31"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":45127,"isOffset":false,"isSlot":false,"src":"3708:6:31","valueSize":1},{"declaration":45122,"isOffset":false,"isSlot":false,"src":"3632:15:31","valueSize":1},{"declaration":45124,"isOffset":false,"isSlot":false,"src":"3684:10:31","valueSize":1}],"id":45129,"nodeType":"InlineAssembly","src":"3515:233:31"}]},"documentation":{"id":45120,"nodeType":"StructuredDocumentation","src":"2917:431:31","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:31","parameters":{"id":45125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45122,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:31","nodeType":"VariableDeclaration","scope":45131,"src":"3378:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":45124,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:31","nodeType":"VariableDeclaration","scope":45131,"src":"3403:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:31"},"returnParameters":{"id":45128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45127,"mutability":"mutable","name":"digest","nameLocation":"3454:6:31","nodeType":"VariableDeclaration","scope":45131,"src":"3446:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:31"},"scope":45132,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":45063,"nodeType":"StructuredDocumentation","src":"190:330:31","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[45132],"name":"MessageHashUtils","nameLocation":"529:16:31","scope":45133,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":31}