{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8710ebb400edcc43cc7572a3bc8e77d84d978773cf2111ab9336c3263ac970864736f6c63430008170033","sourceMap":"531:1742:39:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;531:1742:39;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8710ebb400edcc43cc7572a3bc8e77d84d978773cf2111ab9336c3263ac970864736f6c63430008170033","sourceMap":"531:1742:39:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":micro-onchain-metadata-utils/=lib/micro-onchain-metadata-utils/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":sstore2/=lib/sstore2/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","micro-onchain-metadata-utils/=lib/micro-onchain-metadata-utils/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","sstore2/=lib/sstore2/contracts/"],"optimizer":{"enabled":true,"runs":50000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":"SignatureChecker"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol":{"keccak256":"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39","urls":["bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743","dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf","urls":["bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c","dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol":{"keccak256":"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6","urls":["bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69","dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol","id":47089,"exportedSymbols":{"ECDSA":[46686],"IERC1271":[45516],"SignatureChecker":[47088]},"nodeType":"SourceUnit","src":"123:2151:39","nodes":[{"id":46989,"nodeType":"PragmaDirective","src":"123:24:39","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":46991,"nodeType":"ImportDirective","src":"149:34:39","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","nameLocation":"-1:-1:-1","scope":47089,"sourceUnit":46687,"symbolAliases":[{"foreign":{"id":46990,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46686,"src":"157:5:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":46993,"nodeType":"ImportDirective","src":"184:55:39","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol","file":"../../interfaces/IERC1271.sol","nameLocation":"-1:-1:-1","scope":47089,"sourceUnit":45517,"symbolAliases":[{"foreign":{"id":46992,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45516,"src":"192:8:39","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":47088,"nodeType":"ContractDefinition","src":"531:1742:39","nodes":[{"id":47035,"nodeType":"FunctionDefinition","src":"1039:368:39","nodes":[],"body":{"id":47034,"nodeType":"Block","src":"1151:256:39","nodes":[],"statements":[{"assignments":[47007,47010,null],"declarations":[{"constant":false,"id":47007,"mutability":"mutable","name":"recovered","nameLocation":"1170:9:39","nodeType":"VariableDeclaration","scope":47034,"src":"1162:17:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47006,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47010,"mutability":"mutable","name":"error","nameLocation":"1200:5:39","nodeType":"VariableDeclaration","scope":47034,"src":"1181:24:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$46346","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":47009,"nodeType":"UserDefinedTypeName","pathNode":{"id":47008,"name":"ECDSA.RecoverError","nameLocations":["1181:5:39","1187:12:39"],"nodeType":"IdentifierPath","referencedDeclaration":46346,"src":"1181:18:39"},"referencedDeclaration":46346,"src":"1181:18:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$46346","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":47016,"initialValue":{"arguments":[{"id":47013,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46999,"src":"1228:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":47014,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47001,"src":"1234:9:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":47011,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46686,"src":"1211:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$46686_$","typeString":"type(library ECDSA)"}},"id":47012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1217:10:39","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":46412,"src":"1211:16:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$46346_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":47015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:33:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$46346_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"1161:83:39"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":47032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":47025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$46346","typeString":"enum ECDSA.RecoverError"},"id":47021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47017,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47010,"src":"1274:5:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$46346","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":47018,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46686,"src":"1283:5:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$46686_$","typeString":"type(library ECDSA)"}},"id":47019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1289:12:39","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":46346,"src":"1283:18:39","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$46346_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":47020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1302:7:39","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":46342,"src":"1283:26:39","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$46346","typeString":"enum ECDSA.RecoverError"}},"src":"1274:35:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":47024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47022,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47007,"src":"1313:9:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":47023,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46997,"src":"1326:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1313:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1274:58:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":47026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1273:60:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":47028,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46997,"src":"1376:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":47029,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46999,"src":"1384:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":47030,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47001,"src":"1390:9:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":47027,"name":"isValidERC1271SignatureNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47087,"src":"1349:26:39","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes memory) view returns (bool)"}},"id":47031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:51:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1273:127:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":47005,"id":47033,"nodeType":"Return","src":"1254:146:39"}]},"documentation":{"id":46995,"nodeType":"StructuredDocumentation","src":"562:472:39","text":" @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"implemented":true,"kind":"function","modifiers":[],"name":"isValidSignatureNow","nameLocation":"1048:19:39","parameters":{"id":47002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46997,"mutability":"mutable","name":"signer","nameLocation":"1076:6:39","nodeType":"VariableDeclaration","scope":47035,"src":"1068:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46996,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46999,"mutability":"mutable","name":"hash","nameLocation":"1092:4:39","nodeType":"VariableDeclaration","scope":47035,"src":"1084:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":46998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1084:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":47001,"mutability":"mutable","name":"signature","nameLocation":"1111:9:39","nodeType":"VariableDeclaration","scope":47035,"src":"1098:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":47000,"name":"bytes","nodeType":"ElementaryTypeName","src":"1098:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1067:54:39"},"returnParameters":{"id":47005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47035,"src":"1145:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47003,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1144:6:39"},"scope":47088,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":47087,"nodeType":"FunctionDefinition","src":"1813:458:39","nodes":[],"body":{"id":47086,"nodeType":"Block","src":"1962:309:39","nodes":[],"statements":[{"assignments":[47048,47050],"declarations":[{"constant":false,"id":47048,"mutability":"mutable","name":"success","nameLocation":"1978:7:39","nodeType":"VariableDeclaration","scope":47086,"src":"1973:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47047,"name":"bool","nodeType":"ElementaryTypeName","src":"1973:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":47050,"mutability":"mutable","name":"result","nameLocation":"2000:6:39","nodeType":"VariableDeclaration","scope":47086,"src":"1987:19:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":47049,"name":"bytes","nodeType":"ElementaryTypeName","src":"1987:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":47062,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":47055,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45516,"src":"2056:8:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$45516_$","typeString":"type(contract IERC1271)"}},"id":47056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2065:16:39","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":45515,"src":"2056:25:39","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},{"components":[{"id":47057,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47040,"src":"2084:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":47058,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47042,"src":"2090:9:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":47059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2083:17:39","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"},{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes32,bytes memory)"}],"expression":{"id":47053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2041:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":47054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2045:10:39","memberName":"encodeCall","nodeType":"MemberAccess","src":"2041:14:39","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":47060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2041:60:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":47051,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47038,"src":"2010:6:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":47052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2017:10:39","memberName":"staticcall","nodeType":"MemberAccess","src":"2010:17:39","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":47061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:101:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1972:139:39"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":47083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":47068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47063,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47048,"src":"2129:7:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":47064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47050,"src":"2152:6:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":47065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2159:6:39","memberName":"length","nodeType":"MemberAccess","src":"2152:13:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":47066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:2:39","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2152:19:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2129:42:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":47082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":47071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47050,"src":"2198:6:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":47073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2207:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":47072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2207:7:39","typeDescriptions":{}}}],"id":47074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2206:9:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":47069,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2187:3:39","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":47070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2191:6:39","memberName":"decode","nodeType":"MemberAccess","src":"2187:10:39","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":47075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:29:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":47078,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45516,"src":"2228:8:39","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$45516_$","typeString":"type(contract IERC1271)"}},"id":47079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2237:16:39","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":45515,"src":"2228:25:39","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":47080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2254:8:39","memberName":"selector","nodeType":"MemberAccess","src":"2228:34:39","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":47077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2220:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":47076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2220:7:39","typeDescriptions":{}}},"id":47081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:43:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2187:76:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2129:134:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":47084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2128:136:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":47046,"id":47085,"nodeType":"Return","src":"2121:143:39"}]},"documentation":{"id":47036,"nodeType":"StructuredDocumentation","src":"1413:395:39","text":" @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."},"implemented":true,"kind":"function","modifiers":[],"name":"isValidERC1271SignatureNow","nameLocation":"1822:26:39","parameters":{"id":47043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47038,"mutability":"mutable","name":"signer","nameLocation":"1866:6:39","nodeType":"VariableDeclaration","scope":47087,"src":"1858:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47037,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47040,"mutability":"mutable","name":"hash","nameLocation":"1890:4:39","nodeType":"VariableDeclaration","scope":47087,"src":"1882:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1882:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":47042,"mutability":"mutable","name":"signature","nameLocation":"1917:9:39","nodeType":"VariableDeclaration","scope":47087,"src":"1904:22:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":47041,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1848:84:39"},"returnParameters":{"id":47046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47087,"src":"1956:4:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47044,"name":"bool","nodeType":"ElementaryTypeName","src":"1956:4:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1955:6:39"},"scope":47088,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SignatureChecker","contractDependencies":[],"contractKind":"library","documentation":{"id":46994,"nodeType":"StructuredDocumentation","src":"241:289:39","text":" @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."},"fullyImplemented":true,"linearizedBaseContracts":[47088],"name":"SignatureChecker","nameLocation":"539:16:39","scope":47089,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":39}