{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1698977683167,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "ba325c778a7da8a21c2136aa32763c14",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "266a53b71b3a6b9c6c1d7e7763610cb8",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "d984e2c76dae07bac1e292af2a5d4fd1",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "0a580d6fac69e9d4b6504f747f3c0c24",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "a341308627b7eeab7589534daad58186",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "abd6f3379e6e2a7979b18abc21aea0c1",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1698977683168,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1698977683169,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1698977683169,
      "contentHash": "15866901137b5670eabf31362523bd28",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1698977683169,
      "contentHash": "eff2556a384c025f56150fb3f78de858",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1698977683169,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1698977683169,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1698977683170,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1698977683170,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "safeconsole.sol/safeconsole.json"
        }
      }
    },
    "lib/imp/src/core/DelegateRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "d07183b27646ced91d90acab0271bf97",
      "sourceName": "lib/imp/src/core/DelegateRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/imp/src/core/IdRegistry.sol",
        "lib/imp/src/core/interfaces/IDelegateRegistry.sol",
        "lib/imp/src/core/interfaces/IIdRegistry.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "DelegateRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "DelegateRegistry.sol/DelegateRegistry.json"
        }
      }
    },
    "lib/imp/src/core/IdRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "b8f9347f468aa05e6c127574844bbdb0",
      "sourceName": "lib/imp/src/core/IdRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/imp/src/core/interfaces/IIdRegistry.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IdRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IdRegistry.sol/IdRegistry.json"
        }
      }
    },
    "lib/imp/src/core/NodeRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "677fe7a788833b694634a5948ecc86bc",
      "sourceName": "lib/imp/src/core/NodeRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/imp/src/core/interfaces/INodeRegistry.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "NodeRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NodeRegistry.sol/NodeRegistry.json"
        }
      }
    },
    "lib/imp/src/core/interfaces/IDelegateRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "6c374176b56872d8049ec11619de5db5",
      "sourceName": "lib/imp/src/core/interfaces/IDelegateRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/imp/src/core/IdRegistry.sol",
        "lib/imp/src/core/interfaces/IIdRegistry.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IDelegateRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IDelegateRegistry.sol/IDelegateRegistry.json"
        }
      }
    },
    "lib/imp/src/core/interfaces/IIdRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "97a95405d21e97b2ead4a5a074531f1a",
      "sourceName": "lib/imp/src/core/interfaces/IIdRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "IIdRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IIdRegistry.sol/IIdRegistry.json"
        }
      }
    },
    "lib/imp/src/core/interfaces/INodeRegistry.sol": {
      "lastModificationDate": 1699120012089,
      "contentHash": "770684be440b9f9fd62cca5b80632d35",
      "sourceName": "lib/imp/src/core/interfaces/INodeRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "INodeRegistry": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "INodeRegistry.sol/INodeRegistry.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/core/BaseAccount.sol": {
      "lastModificationDate": 1699120012097,
      "contentHash": "a53a173b72742916b9c1cfef610f64b1",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/core/BaseAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BaseAccount": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "BaseAccount.sol/BaseAccount.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol": {
      "lastModificationDate": 1699120012097,
      "contentHash": "3cbc58efa815f026e5e180817b65c653",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "Helpers": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Helpers.sol/Helpers.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol": {
      "lastModificationDate": 1699120012097,
      "contentHash": "6d787a742dcf67af8bebad8a8db7b78e",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAccount": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAccount.sol/IAccount.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
      "lastModificationDate": 1699120012097,
      "contentHash": "70c22a1f7e8ee0bd97fcabb493c4fca6",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAggregator": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IAggregator.sol/IAggregator.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
      "lastModificationDate": 1699120012098,
      "contentHash": "f88a97ac988a378551551be9ea4ee65e",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IEntryPoint": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IEntryPoint.sol/IEntryPoint.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
      "lastModificationDate": 1699120012098,
      "contentHash": "58293337a68c401ac395a955ab972702",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "INonceManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "INonceManager.sol/INonceManager.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
      "lastModificationDate": 1699120012098,
      "contentHash": "e5c534a14fbf384a02ed5f007d54b1f0",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IStakeManager": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IStakeManager.sol/IStakeManager.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
      "lastModificationDate": 1699120012098,
      "contentHash": "e605ec59ee4889ea6ef8b5332e7da0d8",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "UserOperationLib": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UserOperation.sol/UserOperationLib.json"
        }
      }
    },
    "lib/light-account/lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
      "lastModificationDate": 1699120012099,
      "contentHash": "21bec772e7d7c8f85367728487148cf3",
      "sourceName": "lib/light-account/lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "TokenCallbackHandler": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "TokenCallbackHandler.sol/TokenCallbackHandler.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
      "lastModificationDate": 1699120012132,
      "contentHash": "8fe867b95c856b204f954a1910e28a1e",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1271": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "interfaces/IERC1271.sol/IERC1271.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
      "lastModificationDate": 1699120012134,
      "contentHash": "d0d060231a45da7a1eecbb5cd286fa40",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1967": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC1967.sol/IERC1967.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1699120012136,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "lastModificationDate": 1699120012143,
      "contentHash": "3fc3c7c0a2956f36e766691bb9473b06",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1967Proxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC1967Proxy.sol/ERC1967Proxy.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1699120012143,
      "contentHash": "a127706394bead18392601a20d44867a",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1699120012143,
      "contentHash": "40b3d81a836d50ff47e03893dcaaf204",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Proxy": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Proxy.sol/Proxy.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1699120012144,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1699120012144,
      "contentHash": "ef5dcf877816ad119a42c741dd257d0a",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "UUPSUpgradeable.sol/UUPSUpgradeable.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1699120012146,
      "contentHash": "9f8822b72fe2702979e40160cb6d9636",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155Receiver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC1155Receiver.sol/IERC1155Receiver.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1699120012161,
      "contentHash": "c22d4395e33763de693fd440c6fd10e1",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC721Receiver.sol/IERC721Receiver.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
      "lastModificationDate": 1699120012166,
      "contentHash": "268af1696d7a83a7e78a1a8f5ba1c685",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC777Recipient": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC777Recipient.sol/IERC777Recipient.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1699120012166,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
      "lastModificationDate": 1699120012167,
      "contentHash": "752ff0901adbdac182deace414d9e75f",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Create2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Create2": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Create2.sol/Create2.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1699120012167,
      "contentHash": "682f7dd1f2e1147c8390e7575deceb2d",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1699120012167,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "utils/Strings.sol/Strings.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1699120012167,
      "contentHash": "d822a8a9468649cab463f29f5decf5cc",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSA": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "cryptography/ECDSA.sol/ECDSA.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
      "lastModificationDate": 1699120012167,
      "contentHash": "53d16b3bec482493405bdc74852eb2cd",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignatureChecker": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "cryptography/SignatureChecker.sol/SignatureChecker.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1699120012168,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1699120012168,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "math/Math.sol/Math.json"
        }
      }
    },
    "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1699120012169,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "math/SignedMath.sol/SignedMath.json"
        }
      }
    },
    "lib/light-account/src/CustomSlotInitializable.sol": {
      "lastModificationDate": 1699120012194,
      "contentHash": "3a40c6dbafc5ea2cb081c1cb9076e263",
      "sourceName": "lib/light-account/src/CustomSlotInitializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.21",
      "artifacts": {
        "CustomSlotInitializable": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "CustomSlotInitializable.sol/CustomSlotInitializable.json"
        }
      }
    },
    "lib/light-account/src/LightAccount.sol": {
      "lastModificationDate": 1699120012194,
      "contentHash": "db919d523e2e806f4a08cb5377fd38ef",
      "sourceName": "lib/light-account/src/LightAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/light-account/lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/light-account/src/CustomSlotInitializable.sol"
      ],
      "versionRequirement": "^0.8.21",
      "artifacts": {
        "LightAccount": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LightAccount.sol/LightAccount.json"
        }
      }
    },
    "lib/light-account/src/LightAccountFactory.sol": {
      "lastModificationDate": 1699120012194,
      "contentHash": "0543e09288c05cba152ab6ccddc7b8ad",
      "sourceName": "lib/light-account/src/LightAccountFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/light-account/lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/light-account/lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/light-account/src/CustomSlotInitializable.sol",
        "lib/light-account/src/LightAccount.sol"
      ],
      "versionRequirement": "^0.8.21",
      "artifacts": {
        "LightAccountFactory": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "LightAccountFactory.sol/LightAccountFactory.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
      "lastModificationDate": 1699120012210,
      "contentHash": "8fe867b95c856b204f954a1910e28a1e",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1271": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IERC1271.sol/IERC1271.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1699120012224,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1699120012225,
      "contentHash": "d822a8a9468649cab463f29f5decf5cc",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSA": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ECDSA.sol/ECDSA.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
      "lastModificationDate": 1699120012225,
      "contentHash": "53d16b3bec482493405bdc74852eb2cd",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignatureChecker": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SignatureChecker.sol/SignatureChecker.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1699120012226,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1699120012226,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "script/RiverSetup.s.sol": {
      "lastModificationDate": 1699120229182,
      "contentHash": "54c29cf3dbfe1112eb88fdb18b540b05",
      "sourceName": "script/RiverSetup.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/imp/src/core/DelegateRegistry.sol",
        "lib/imp/src/core/IdRegistry.sol",
        "lib/imp/src/core/NodeRegistry.sol",
        "lib/imp/src/core/interfaces/IDelegateRegistry.sol",
        "lib/imp/src/core/interfaces/IIdRegistry.sol",
        "lib/imp/src/core/interfaces/INodeRegistry.sol",
        "lib/light-account/lib/account-abstraction/contracts/core/BaseAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/core/Helpers.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAccount.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IAggregator.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/INonceManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/IStakeManager.sol",
        "lib/light-account/lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "lib/light-account/lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/light-account/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/light-account/src/CustomSlotInitializable.sol",
        "lib/light-account/src/LightAccount.sol",
        "lib/light-account/src/LightAccountFactory.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "src/validators/RiverValidatorV1.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "RiverSetupScript": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RiverSetup.s.sol/RiverSetupScript.json"
        }
      }
    },
    "script/transactions/IdRegistry.s.sol": {
      "lastModificationDate": 1699120012255,
      "contentHash": "aa0c99e950376d04ff62ddf31b702d23",
      "sourceName": "script/transactions/IdRegistry.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "lib/imp/src/core/IdRegistry.sol",
        "lib/imp/src/core/interfaces/IIdRegistry.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "IdRegistryScript": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "IdRegistry.s.sol/IdRegistryScript.json"
        }
      }
    },
    "script/transactions/NodeRegistry.s.sol": {
      "lastModificationDate": 1699120229182,
      "contentHash": "981297be8b736507fc7bd42a2fb7015c",
      "sourceName": "script/transactions/NodeRegistry.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "NodeRegistry.s": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NodeRegistry.s.sol/NodeRegistry.s.json"
        }
      }
    },
    "src/types/access/AdminWithMembers.sol": {
      "lastModificationDate": 1699120229182,
      "contentHash": "ff2b8b6aa9bbf197f7fb6fce6fc5c820",
      "sourceName": "src/types/access/AdminWithMembers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "AdminWithMembers": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "AdminWithMembers.sol/AdminWithMembers.json"
        }
      }
    },
    "src/types/channel/ChannelMessageTypes.sol": {
      "lastModificationDate": 1699120229182,
      "contentHash": "14350db088ba2704ff3f2930bb8ec713",
      "sourceName": "src/types/channel/ChannelMessageTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "ChannelMessageTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "ChannelMessageTypes.sol/ChannelMessageTypes.json"
        }
      }
    },
    "src/types/general/NodeRegistryTypes.sol": {
      "lastModificationDate": 1699122561953,
      "contentHash": "5fe943552154cada3bcd3d406ee50b69",
      "sourceName": "src/types/general/NodeRegistryTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "NodeRegistryTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "NodeRegistryTypes.sol/NodeRegistryTypes.json"
        }
      }
    },
    "src/types/publication/PublicationMessageTypes.sol": {
      "lastModificationDate": 1699122707787,
      "contentHash": "bfc29a122a8b7a4d38cd3d75fef2c6d5",
      "sourceName": "src/types/publication/PublicationMessageTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "PublicationMessageTypes": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "PublicationMessageTypes.sol/PublicationMessageTypes.json"
        }
      }
    },
    "src/validators/RiverValidatorV1.sol": {
      "lastModificationDate": 1699120012255,
      "contentHash": "8ae21bf1ec80a1213b3239d723483e9d",
      "sourceName": "src/validators/RiverValidatorV1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "RiverValidatorV1": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RiverValidatorV1.sol/RiverValidatorV1.json"
        }
      }
    },
    "test/RiverValidatorV1.t.sol": {
      "lastModificationDate": 1699120012255,
      "contentHash": "4b81d683c09ee484f24a0c2461941c36",
      "sourceName": "test/RiverValidatorV1.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "src/validators/RiverValidatorV1.sol"
      ],
      "versionRequirement": "=0.8.21",
      "artifacts": {
        "RiverValidatorV1Test": {
          "0.8.21+commit.d9974bed.Darwin.appleclang": "RiverValidatorV1.t.sol/RiverValidatorV1Test.json"
        }
      }
    }
  }
}